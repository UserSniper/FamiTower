MEMORY {
    ZP:     start = $00,    size = $0100, type = rw, file = "", define = yes;
    OAM_MEM:    start = $0200,  size = $0100, type = rw, file = "", define = yes;
    RAM:    start = $0300,  size = $0500, type = rw, file = "", define = yes;
    HDR:    start = $0000,  size = $0010, type = ro, file = %O, fill = yes, fillval = $00;
    PRG:    start = $8000,  size = $7ffa, type = ro, file = %O, fill = yes, fillval = $00, define = yes;
    VEC:    start = $fffa,  size = $0006, type = ro, file = %O, fill = yes, fillval = $00, define = yes;
    CHR_M_00:    start = $0000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes;
}

SEGMENTS {
    ZEROPAGE: load = ZP,  type = zp, define = yes;
    OAM:      load = OAM_MEM, type = bss, align = $100, define = yes;
    BSS:      load = RAM, type = bss, define = yes;
    FS_RAM:   load = RAM, type = rw, define = yes;
    HEADER:   load = HDR, type = ro, define = yes;
    CODE:     load = PRG, type = ro, define = yes;
    RODATA:   load = PRG, type = ro, define = yes;
    DATA:     load = PRG, run = RAM, type = rw, define = yes;
    ONCE:     load = PRG,            type = ro, define = yes;
    DMC:      load = PRG, type = ro, define = yes, align = $100;
    VECTORS:  load = VEC, type = ro, start = $fffa, define = yes;
    CHR_00:    load = CHR_M_00, type = ro, define = yes;
}
FEATURES {

    CONDES: segment = INIT,
        type = constructor,
        label = __CONSTRUCTOR_TABLE__,
        count = __CONSTRUCTOR_COUNT__;
    CONDES: segment = RODATA,
        type = destructor,
        label = __DESTRUCTOR_TABLE__,
        count = __DESTRUCTOR_COUNT__;
    CONDES: type = interruptor,
        segment = RODATA,
        label = __INTERRUPTOR_TABLE__,
        count = __INTERRUPTOR_COUNT__;
}